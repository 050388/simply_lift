#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Wiring
\end_layout

\begin_layout Standard
Interactive web applications have many interdependent components on a single
 web page.
 For example (and this is the example we'll use for this chapter), you may
 have a shopping cart in your application.
 The shopping cart will contain items and quantities.
 As you add/remove items from the cart, the cart should update, along with
 the sub-total, the tax, the shipping and the grand total.
 Plus, the count of the items in the cart may be displayed on some pages
 without the cart contents.
 Keeping track of all of these dependencies for all the different page layouts
 is pretty tough work.
 When it comes to updating the site, the team must remember where all of
 the items are and how to update them and if they get one wrong, the site
 looks broken.
\end_layout

\begin_layout Standard
Lift's Wiring provides a simply solution to managing complex dependencies
 on a single page and on multiple tabs.
 Lift's Wiring allows you to declare the formulaic relationships among cells
 (like a spreadsheet) and then the user interface components (yes, there
 can be more than one component) associated with each cell.
 Lift will automatically update the dependent user interface components
 based on change in the predicates.
 Lift will do this on initial page render and with each Ajax or Comet update
 to the page.
 Put another way, Wiring is like a spreadsheet and the page will automatically
 get updated when any of the predicate values change such that the change
 results in a change in the display value.
\end_layout

\begin_layout Section
Simple Wiring
\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
